<?xml version="1.0"?>

<!--
	Coordinate system convention for grippers:
	The pin of the gripper is along the y-axis, and z-axis points up.
	The resulting x-axis is considered the palm face, so +y is right, and -y is left for
	a right-hand gripper, whatever that means in this gripper.

	Coarse and precise models:

	Two granularities for collision are provided, a coarse (default) for quick motion
	planning purposes, and a precise for grasp simulation. This is selected with the
	boolean parameter precise_collision = true/false (default to false)

	In the same line, there is the adaptive_transmission parameter that might use
	pure mimic joints (default and motion does not consider adaptation) for visualization
	and update of real hw, and an implementation of the 5-bar transmission with
	spring transmission for grasp simulation.

	For grasp simulation, the file 2f85.gazebo.xacro sets additional parameters such as
	material properties, and simulation parameters.
-->

<robot xmlns:xacro="http://ros.org/wiki/xacro">

	<xacro:include filename="$(find robotiq_2f_model)/model/inertias.urdf.xacro" />

	<xacro:macro name="robotiq_2f_85" params="parent name precise_collision:=false adaptive_transmission:=false with_pads:=true *origin">

		<!-- base -->
		<joint name="${parent}_${name}_base_joint" type="fixed">
			<xacro:insert_block name="origin"/>
			<parent link="${parent}"/>
			<child link="${name}_base"/>
		</joint>
		<link name="${name}_base">
			<inertial>
<!--				<mass value="0.5"/> -->
				<mass value="0.636951"/>
				<origin xyz="0 0 ${0.015*0.5}"  />
<!--				<xacro:cyl_iner radius="0.04" length="0.045" mass="0.5"/> -->
				<xacro:cyl_iner radius="0.04" length="0.045" mass="0.636951"/>
			</inertial>
			<visual>
				<origin xyz="0 0 0" rpy="0 -1.5708 0"/>
				<geometry>
					<mesh filename="package://robotiq_2f_model/model/meshes/2f85/visual/base.dae"/>
				</geometry>
			</visual>

<!--			<xacro:unless value="${precise_collision}">
			<collision>
				<origin xyz="0 0 0.015" rpy="0 0 0"/>
				<geometry>
					<cylinder radius="0.04" length="0.045"/>
				</geometry>
			</collision>
			<collision>
				<origin xyz="0 0 0.06" rpy="0 0 0"/>
				<geometry>
					<box size="0.03 0.03 0.06"/>
				</geometry>
			</collision>
			</xacro:unless>
			<xacro:if value="${precise_collision}">
			<collision>
				<geometry>
					<mesh filename="package://robotiq_2f_model/model/meshes/2f85/collision/base.stl" scale="0.001 0.001 0.001"/>
				</geometry>
			</collision>
			</xacro:if> -->
		</link>
                <gazebo reference="${name}_base">
                    <selfCollide>true</selfCollide>
                    <implicitSpringDamper>1</implicitSpringDamper>
                    <mu1>100000</mu1>
                    <mu2>100000</mu2>
                    <kp>100000000.0</kp>
                    <kd>1.0</kd>
                </gazebo>   

		<!-- right finger -->

		<joint name="${name}_right_driver_joint" type="revolute">
			<origin xyz="0 0.0306011 0.054904" rpy="0 0 0"/>
			<parent link="${name}_base"/>
			<child link="${name}_right_driver"/>
			<axis xyz="1 0 0"/>
			<limit lower="${0 * 3.141592 / 180}" upper="${50 * 3.141592 / 180}" effort="1000" velocity="${110 * 3.141592 / 180}" />
		</joint>
		<link name="${name}_right_driver">
			<inertial>
<!--				<mass value="0.1"/> -->
				<mass value="0.018491"/>
				<origin xyz="0 0.02 0" rpy="0 0 0" />
<!--				<xacro:box_inertia x_dim="0.02" y_dim="0.04" z_dim="0.02" mass="0.1"/> -->
				<xacro:box_inertia x_dim="0.02" y_dim="0.04" z_dim="0.02" mass="0.018491"/>
			</inertial>
			<visual>
				<geometry>
					<mesh filename="package://robotiq_2f_model/model/meshes/2f85/visual/driver.dae" scale="0.001 0.001 0.001"/>
				</geometry>
			</visual>
<!--			<xacro:unless value="${precise_collision}">
			<collision>
				<origin xyz="0 0.01 0" rpy="-0.1 0 0"/>
				<geometry>
					<box size="0.002 0.004 0.002"/>
				</geometry>
			</collision>
			</xacro:unless>
			<xacro:if value="${precise_collision}">
			<collision>
				<geometry>
					<mesh filename="package://robotiq_2f_model/model/meshes/2f85/collision/driver.stl" scale="0.001 0.001 0.001"/>
				</geometry>
			</collision>
			</xacro:if> -->
		</link>
                <gazebo reference="${name}_right_driver">
                    <selfCollide>true</selfCollide>
                    <implicitSpringDamper>1</implicitSpringDamper>
                    <mu1>100000</mu1>
                    <mu2>100000</mu2>
                    <kp>100000000.0</kp>
                    <kd>1.0</kd>
                </gazebo>   

		<xacro:unless value="${adaptive_transmission}">
		<joint name="${name}_right_coupler_joint" type="fixed">
			<origin xyz="0 0.0315 -0.0041" rpy="0 0 0"/>
			<parent link="${name}_right_driver"/>
			<child link="${name}_right_coupler"/>
		</joint>
		</xacro:unless>
		<xacro:if value="${adaptive_transmission}">
		<joint name="${name}_right_coupler_joint" type="continuous">
			<origin xyz="0 0.0315 -0.0041" rpy="0 0 0"/>
			<parent link="${name}_right_driver"/>
			<child link="${name}_right_coupler"/>
			<axis xyz="1 0 0"/>
			<limit lower="${-170 * 3.141592 / 180}" upper="${170 * 3.141592 / 180}" effort="1000" velocity="${110 * 3.141592 / 180}" />
		</joint>
		</xacro:if>

		<link name="${name}_right_coupler">
			<inertial>
<!--				<mass value="0.1"/> -->
                                <mass value="0.027309" />
				<origin xyz="0 0.0 0.025" rpy="-1.7 0 0"/>
<!--				<xacro:box_inertia x_dim="0.03" y_dim="0.065" z_dim="0.02" mass="0.1"/> -->
				<xacro:box_inertia x_dim="0.03" y_dim="0.065" z_dim="0.02" mass="0.027309"/>
			</inertial>
			<visual>
				<geometry>
					<mesh filename="package://robotiq_2f_model/model/meshes/2f85/visual/coupler.dae" scale="0.001 0.001 0.001"/>
				</geometry>
			</visual>
			<xacro:unless value="${precise_collision}">
			<collision>
				<origin xyz="0 0.0 0.025" rpy="-1.7 0 0"/>
				<geometry>
					<box size="0.03 0.065 0.02"/>
				</geometry>
			</collision>
			</xacro:unless>
			<xacro:if value="${precise_collision}">
<!--				<collision>
					<geometry>
						<mesh filename="package://robotiq_2f_model/model/meshes/2f85/collision/coupler.stl" scale="0.001 0.001 0.001"/>
					</geometry>
				</collision> -->
			</xacro:if>
		</link>
                <gazebo reference="${name}_right_coupler">
                    <selfCollide>true</selfCollide>
                    <implicitSpringDamper>1</implicitSpringDamper>
                    <mu1>100000</mu1>
                    <mu2>100000</mu2>
                    <kp>100000000.0</kp>
                    <kd>1.0</kd>
                </gazebo>   

		<joint name="${name}_right_follower_joint" type="revolute">
<!--			<origin xyz="0 0.0061 0.0471" rpy="0 0 0"/> -->
                        <origin xyz="0.0 0.037 0.043" rpy="0.0 0.0 0.0"/>
			<parent link="${name}_right_spring_link"/>
			<child link="${name}_right_follower"/>
			<axis xyz="1 0 0"/>
			<limit lower="${-170 * 3.141592 / 180}" upper="${170 * 3.141592 / 180}" effort="1000" velocity="${110 * 3.141592 / 180}" /> 

<!--			<xacro:unless value="${adaptive_transmission}">
			<mimic joint="${name}_right_driver_joint" multiplier="-1"/>
			</xacro:unless> -->
		</joint>
		<link name="${name}_right_follower">
			<inertial>
<!--				<mass value="0.1"/> -->
                                <mass value="0.01" />
<!--				<origin xyz="0 0 0" /> -->
				<origin xyz="0 0.018 -0.0065" />
<!--				<xacro:box_inertia x_dim="0.02" y_dim="0.015" z_dim="0.048" mass="0.1"/> -->
				<xacro:box_inertia x_dim="0.02" y_dim="0.015" z_dim="0.048" mass="0.01"/>
			</inertial>
			<visual>
				<origin xyz="0 0.018 -0.0065" />
				<geometry>
					<mesh filename="package://robotiq_2f_model/model/meshes/2f85/visual/follower.dae" scale="0.001 0.001 0.001"/>
				</geometry>
			</visual>
			<xacro:unless value="${precise_collision}">

			<collision>
				<origin xyz="0 0 0" />
				<geometry>
					<box size="0.002 0.0015 0.0048"/>
				</geometry>
			</collision>
			</xacro:unless>
			<xacro:if value="${precise_collision}">
			<collision>
				<origin xyz="0 0.018 -0.0065" />
				<geometry>
					<mesh filename="package://robotiq_2f_model/model/meshes/2f85/collision/follower.stl" scale="0.001 0.001 0.001"/>
				</geometry>
			</collision>
			</xacro:if>
		</link>
                <gazebo reference="${name}_right_follower">
                    <selfCollide>true</selfCollide>
                    <implicitSpringDamper>1</implicitSpringDamper>
                    <mu1>100000</mu1>
                    <mu2>100000</mu2>
                    <kp>1.0</kp>
                    <kd>1.0</kd>
<!--                    <mu1>100000</mu1>
               	        <mu2>100000</mu2>
               	        <kp>100000000.0</kp>
               	        <kd>1.0</kd> -->
                </gazebo>  

		<xacro:if value="${with_pads}">
			<joint name="${name}_right_pad_joint" type="fixed">
				<parent link="${name}_right_follower"/>
				<child link="${name}_right_pad"/>
			</joint>
			<link name="${name}_right_pad">
				<inertial>
<!--					<mass value="0.1"/> -->
					<mass value="0.009555"/>
				        <origin xyz="0 0.018 -0.0065" />
			<!--		<origin xyz="0 -0.022 0.031" /> -->
					<xacro:box_inertia x_dim="0.02" y_dim="0.008" z_dim="0.036" mass="0.009555"/>
<!--					<xacro:box_inertia x_dim="0.02" y_dim="0.008" z_dim="0.036" mass="0.1"/> -->
				</inertial>
				<visual>
				        <origin xyz="0 0.018 -0.0065" />
					<geometry>
						<mesh filename="package://robotiq_2f_model/model/meshes/2f85/visual/pad.dae" scale="0.001 0.001 0.001"/>
					</geometry>
				</visual>
				<xacro:unless value="${precise_collision}">
				<collision>
					<origin xyz="0 -0.022 0.031" rpy="0 0 0"/>
					<geometry>
						<box size="0.02 0.008 0.036"/>
					</geometry>
				</collision>
				</xacro:unless>
				<xacro:if value="${precise_collision}">
				<collision>
				        <origin xyz="0 0.018 -0.0065" />
					<geometry>
						<mesh filename="package://robotiq_2f_model/model/meshes/2f85/collision/pad.stl" scale="0.001 0.001 0.001"/>
					</geometry>
				</collision>
				</xacro:if>
			</link>
                	<gazebo reference="${name}_right_pad">
                            <selfCollide>true</selfCollide>
                  	    <implicitSpringDamper>1</implicitSpringDamper>
                 	    <mu1>100000</mu1>
                	    <mu2>100000</mu2>
               	            <kp>1.0</kp>
                  	    <kd>1.0</kd>
<!--                 	    <mu1>100000</mu1>
                	    <mu2>100000</mu2>
                  	        <kp>100000000.0</kp>
                  	        <kd>1.0</kd> -->
             		</gazebo>  
		</xacro:if>

		<joint name="${name}_right_spring_link_joint" type="revolute">
			<origin xyz="0 0.012 0.0614" rpy="0 0 0"/>
			<parent link="${name}_base"/>
			<child link="${name}_right_spring_link"/>
			<axis xyz="1 0 0"/>
			<limit lower="${-170 * 3.141592 / 180}" upper="${170 * 3.141592 / 180}" effort="1000" velocity="${110 * 3.141592 / 180}" />

<!--			<xacro:unless value="${adaptive_transmission}">
			<mimic joint="${name}_right_driver_joint" multiplier="1"/>
			</xacro:unless> -->
		</joint>
		<link name="${name}_right_spring_link">
			<inertial>
<!--				<mass value="0.1"/> -->
				<mass value="0.029951"/>
				<origin xyz="0 0.018 0.018" rpy="-0.7068 0 0"/>
<!--				<xacro:box_inertia x_dim="0.04" y_dim="0.02" z_dim="0.065" mass="0.1"/> -->
				<xacro:box_inertia x_dim="0.04" y_dim="0.02" z_dim="0.065" mass="0.029951"/>
			</inertial>
			<visual>
				<geometry>
					<mesh filename="package://robotiq_2f_model/model/meshes/2f85/visual/spring_link.dae" scale="0.001 0.001 0.001"/>
				</geometry>
			</visual>
<!--			<xacro:unless value="${precise_collision}">
			<collision>
				<origin xyz="0 0.025 0.015" rpy="-0.7068 0 0"/>
				<geometry>
					<box size="0.004 0.002 0.0065"/>
				</geometry>
			</collision>
			</xacro:unless>
			<xacro:if value="${precise_collision}">
			<collision>
				<geometry>
					<mesh filename="package://robotiq_2f_model/model/meshes/2f85/collision/spring_link.stl" scale="0.001 0.001 0.001"/>
				</geometry>
			</collision>
			</xacro:if> -->
		</link>
                <gazebo reference="${name}_right_spring_link">
                    <selfCollide>true</selfCollide>
                    <implicitSpringDamper>1</implicitSpringDamper>
                    <mu1>100000</mu1>
                    <mu2>100000</mu2>
                    <kp>100000000.0</kp>
                    <kd>1.0</kd>
                </gazebo>  

		<!-- left finger -->

		<joint name="${name}_left_driver_joint" type="revolute">
			<origin xyz="0 -0.0306011 0.054904" rpy="0 0 3.141592653589793"/>
			<parent link="${name}_base"/>
			<child link="${name}_left_driver"/>
			<axis xyz="1 0 0"/>
			<limit lower="${0 * 3.141592 / 180}" upper="${50 * 3.141592 / 180}" effort="1000" velocity="${110 * 3.141592 / 180}" />

<!--			<xacro:unless value="${adaptive_transmission}">
			<mimic joint="${name}_right_driver_joint" multiplier="1"/>
			</xacro:unless> -->
		</joint>
		<link name="${name}_left_driver">
			<inertial>
<!--				<mass value="0.1"/>  -->
				<mass value="0.018491"/>
				<origin xyz="0 0.02 0" rpy="0 0 0" />
<!--				<xacro:box_inertia x_dim="0.02" y_dim="0.04" z_dim="0.02" mass="0.1"/> -->
				<xacro:box_inertia x_dim="0.02" y_dim="0.04" z_dim="0.02" mass="0.018491"/>
			</inertial>
			<visual>
				<geometry>
					<mesh filename="package://robotiq_2f_model/model/meshes/2f85/visual/driver.dae" scale="0.001 0.001 0.001"/>
				</geometry>
			</visual>
<!--			<xacro:unless value="${precise_collision}">
			<collision>
				<origin xyz="0 0.01 0" rpy="-0.1 0 0"/>
				<geometry>
					<box size="0.002 0.004 0.002"/>
				</geometry>
			</collision>
			</xacro:unless>
			<xacro:if value="${precise_collision}">
			<collision>
				<geometry>
					<mesh filename="package://robotiq_2f_model/model/meshes/2f85/collision/driver.stl" scale="0.001 0.001 0.001"/>
				</geometry>
			</collision>
			</xacro:if>  -->
		</link>
                <gazebo reference="${name}_left_driver">
                    <selfCollide>true</selfCollide>
                    <implicitSpringDamper>1</implicitSpringDamper>
                    <mu1>100000</mu1>
                    <mu2>100000</mu2>
                    <kp>100000000.0</kp>
                    <kd>1.0</kd>
                </gazebo>  

		<xacro:unless value="${adaptive_transmission}">
		<joint name="${name}_left_coupler_joint" type="fixed">
			<origin xyz="0 0.0315 -0.0041" rpy="0 0 0"/>
			<parent link="${name}_left_driver"/>
			<child link="${name}_left_coupler"/>
		</joint>
		</xacro:unless>
		<xacro:if value="${adaptive_transmission}">
		<joint name="${name}_left_coupler_joint" type="continuous">
			<origin xyz="0 0.0315 -0.0041" rpy="0 0 0"/>
			<parent link="${name}_left_driver"/>
			<child link="${name}_left_coupler"/>
			<axis xyz="1 0 0"/>
			<limit lower="${-170 * 3.141592 / 180}" upper="${170 * 3.141592 / 180}" effort="1000" velocity="${110 * 3.141592 / 180}" />
		</joint>
		</xacro:if>
		<link name="${name}_left_coupler">
			<inertial>
<!--				<mass value="0.1"/> -->
                                <mass value="0.027309" />
				<origin xyz="0 0.0 0.025" rpy="-1.7 0 0"/>
<!--				<xacro:box_inertia x_dim="0.03" y_dim="0.065" z_dim="0.02" mass="0.1"/> -->
				<xacro:box_inertia x_dim="0.03" y_dim="0.065" z_dim="0.02" mass="0.027309"/>
			</inertial>
			<visual>
				<geometry>
					<mesh filename="package://robotiq_2f_model/model/meshes/2f85/visual/coupler.dae" scale="0.001 0.001 0.001"/>
				</geometry>
			</visual>
			<xacro:unless value="${precise_collision}">
			<collision>
				<geometry>
					<box size="0.03 0.065 0.02"/>
				</geometry>
			</collision>
			</xacro:unless>
			<xacro:if value="${precise_collision}">
<!--				<collision>
				<origin xyz="0 0.0 0.025" rpy="-1.7 0 0"/>
					<geometry>
						<mesh filename="package://robotiq_2f_model/model/meshes/2f85/collision/coupler.stl" scale="0.001 0.001 0.001"/>
					</geometry>
				</collision> -->
			</xacro:if>
		</link>
                <gazebo reference="${name}_left_coupler">
                    <selfCollide>true</selfCollide>
                    <implicitSpringDamper>1</implicitSpringDamper>
                    <mu1>100000</mu1>
                    <mu2>100000</mu2>
                    <kp>100000000.0</kp>
                    <kd>1.0</kd>
                </gazebo>  

		<joint name="${name}_left_follower_joint" type="revolute">
		<!--	<origin xyz="0 0.0061 0.0471" rpy="0 0 0"/>
			<parent link="${name}_left_coupler"/> -->
                        <origin xyz="0.0 0.037 0.043" rpy="0.0 0.0 0.0"/>
			<parent link="${name}_left_spring_link"/>
			<child link="${name}_left_follower"/>
			<axis xyz="1 0 0"/>
			<limit lower="${-170 * 3.141592 / 180}" upper="${170 * 3.141592 / 180}" effort="1000" velocity="${110 * 3.141592 / 180}" />

<!--			<xacro:unless value="${adaptive_transmission}">
			<mimic joint="${name}_right_driver_joint" multiplier="-1"/>
			</xacro:unless> -->
		</joint>
		<link name="${name}_left_follower">
			<inertial>
<!--				<mass value="0.1"/> -->
                                <mass value="0.01" />
				<origin xyz="0 0.018 -0.0065" />
<!--				<origin xyz="0 -0.018 0.022" /> -->
<!--				<xacro:box_inertia x_dim="0.02" y_dim="0.015" z_dim="0.048" mass="0.1"/> -->
				<xacro:box_inertia x_dim="0.02" y_dim="0.015" z_dim="0.048" mass="0.01"/>
			</inertial>
			<visual>
				<origin xyz="0 0.018 -0.0065" />
<!--                                <origin xyz="0 0.01 0.01" /> -->
				<geometry>
					<mesh filename="package://robotiq_2f_model/model/meshes/2f85/visual/follower.dae" scale="0.001 0.001 0.001"/>
				</geometry>
			</visual>
			<xacro:unless value="${precise_collision}">
			<collision>
				<origin xyz="0 -0.01 0.022" rpy="0 0 0"/>
				<geometry>
					<box size="0.002 0.0015 0.0048"/>
				</geometry>
			</collision>
			</xacro:unless>
			<xacro:if value="${precise_collision}">
			<collision>
				<origin xyz="0 0.018 -0.0065" />
				<geometry>
					<mesh filename="package://robotiq_2f_model/model/meshes/2f85/collision/follower.stl" scale="0.001 0.001 0.001"/>
				</geometry>
			</collision>
			</xacro:if>
		</link>
                <gazebo reference="${name}_left_follower">
                    <selfCollide>true</selfCollide>
                    <implicitSpringDamper>1</implicitSpringDamper>
                    <mu1>100000</mu1>
                    <mu2>100000</mu2>
                    <kp>1.0</kp>
                    <kd>1.0</kd>
<!--                    <mu1>100000</mu1>
               	        <mu2>100000</mu2>
               	        <kp>100000000.0</kp>
               	        <kd>1.0</kd> -->
                </gazebo>  

		<xacro:if value="${with_pads}">
			<joint name="${name}_left_pad_joint" type="fixed">
				<parent link="${name}_left_follower"/>
				<child link="${name}_left_pad"/>
			</joint>
			<link name="${name}_left_pad">
				<inertial>
<!--					<mass value="0.1"/> -->
					<mass value="0.009555"/>
			 	        <origin xyz="0 0.018 -0.0065" />
<!--					<origin xyz="0 -0.022 0.031" /> -->
<!--					<xacro:box_inertia x_dim="0.02" y_dim="0.008" z_dim="0.036" mass="0.1"/> -->
					<xacro:box_inertia x_dim="0.02" y_dim="0.008" z_dim="0.036" mass="0.009555"/>
				</inertial>
				<visual>
			 	        <origin xyz="0 0.018 -0.0065" />
					<geometry>
						<mesh filename="package://robotiq_2f_model/model/meshes/2f85/visual/pad.dae" scale="0.001 0.001 0.001"/>
					</geometry>
				</visual>
				<xacro:unless value="${precise_collision}">
				<collision>
					<origin xyz="0 -0.022 0.031" rpy="0 0 0"/>
					<geometry>
						<box size="0.02 0.008 0.036"/>
					</geometry>
				</collision>
				</xacro:unless>
				<xacro:if value="${precise_collision}">
				<collision>
			 	        <origin xyz="0 0.018 -0.0065" />
					<geometry>
						<mesh filename="package://robotiq_2f_model/model/meshes/2f85/collision/pad.stl" scale="0.001 0.001 0.001"/>
					</geometry>
				</collision>
				</xacro:if>
			</link>
                	<gazebo reference="${name}_left_pad">
                                <selfCollide>true</selfCollide>
                   	        <implicitSpringDamper>1</implicitSpringDamper>
                  	        <mu1>100000</mu1>
                  	        <mu2>100000</mu2>
                  	        <kp>1.0</kp>
                  	        <kd>1.0</kd>
<!--                  	        <mu1>100000</mu1>
                  	        <mu2>100000</mu2>
                  	        <kp>100000000.0</kp>
                  	        <kd>1.0</kd> -->
             		</gazebo> 
		</xacro:if>

		<joint name="${name}_left_spring_link_joint" type="revolute">
			<origin xyz="0 -0.012 0.0614" rpy="0 0 3.141592653589793"/>
			<parent link="${name}_base"/>
			<child link="${name}_left_spring_link"/>
			<axis xyz="1 0 0"/>
			<limit lower="${-170 * 3.141592 / 180}" upper="${170 * 3.141592 / 180}" effort="1000" velocity="${110 * 3.141592 / 180}" />

<!--			<xacro:unless value="${adaptive_transmission}">
			<mimic joint="${name}_right_driver_joint" multiplier="1"/>
			</xacro:unless> -->
		</joint>

		<link name="${name}_left_spring_link">
			<inertial>
<!--				<mass value="0.1"/> -->
				<mass value="0.029951"/>
				<origin xyz="0 0.018 0.018" rpy="-0.7068 0 0"/>
<!--				<xacro:box_inertia x_dim="0.04" y_dim="0.02" z_dim="0.065" mass="0.1"/> -->
				<xacro:box_inertia x_dim="0.04" y_dim="0.02" z_dim="0.065" mass="0.029951"/>
			</inertial>
			<visual>
				<geometry>
					<mesh filename="package://robotiq_2f_model/model/meshes/2f85/visual/spring_link.dae" scale="0.001 0.001 0.001"/>
				</geometry>
			</visual>
<!--			<xacro:unless value="${precise_collision}">
			<collision>
				<origin xyz="0 0.025 0.015" rpy="-0.7068 0 0"/>
				<geometry>
					<box size="0.004 0.002 0.0065"/>
				</geometry>
			</collision>
			</xacro:unless>
			<xacro:if value="${precise_collision}">
			<collision>
				<geometry>
					<mesh filename="package://robotiq_2f_model/model/meshes/2f85/collision/spring_link.stl" scale="0.001 0.001 0.001"/>
				</geometry>
			</collision>
			</xacro:if>  -->
		</link>
                <gazebo reference="${name}_left_spring_link">
                        <selfCollide>true</selfCollide>
                   	<implicitSpringDamper>1</implicitSpringDamper>
                  	<mu1>100000</mu1>
                  	<mu2>100000</mu2>
                  	<kp>100000000.0</kp>
                  	<kd>1.0</kd>
             	</gazebo> 

		<xacro:unless value="${adaptive_transmission}">
			<transmission name="${name}_right_driver_trans">
				<type>transmission_interface/SimpleTransmission</type>
				<joint name="${name}_right_driver_joint">
					<hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
<!--					<hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface> -->
				</joint>
				<actuator name="${name}_right_driver_motor">
					<mechanicalReduction>1</mechanicalReduction>
					<hardwareInterface>PositionJointInterface</hardwareInterface>
<!--					<hardwareInterface>PositionJointInterface</hardwareInterface> -->
				</actuator>
			</transmission>
			<transmission name="${name}_left_driver_trans">
				<type>transmission_interface/SimpleTransmission</type>
				<joint name="${name}_left_driver_joint">
					<hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
<!--					<hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface> -->
				</joint>
				<actuator name="${name}_left_driver_motor">
					<mechanicalReduction>1</mechanicalReduction>
					<hardwareInterface>PositionJointInterface</hardwareInterface>
<!--					<hardwareInterface>PositionJointInterface</hardwareInterface> -->
				</actuator>
			</transmission>
			<transmission name="${name}_right_follower_trans">
				<type>transmission_interface/SimpleTransmission</type>
				<joint name="${name}_right_follower_joint">
					<hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
<!--					<hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface> -->
				</joint>
				<actuator name="${name}_right_follower_motor">
					<mechanicalReduction>1</mechanicalReduction>
					<hardwareInterface>PositionJointInterface</hardwareInterface>
<!--					<hardwareInterface>PositionJointInterface</hardwareInterface> -->
				</actuator>
			</transmission>
			<transmission name="${name}_left_follower_trans">
				<type>transmission_interface/SimpleTransmission</type>
				<joint name="${name}_left_follower_joint">
					<hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
<!--					<hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface> -->
				</joint>
				<actuator name="${name}_left_follower_motor">
					<mechanicalReduction>1</mechanicalReduction>
					<hardwareInterface>PositionJointInterface</hardwareInterface>
<!--					<hardwareInterface>PositionJointInterface</hardwareInterface> -->
				</actuator>
			</transmission>
			<transmission name="${name}_right_spring_link_trans">
				<type>transmission_interface/SimpleTransmission</type>
				<joint name="${name}_right_spring_link_joint">
					<hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
<!--					<hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface> -->
				</joint>
				<actuator name="${name}_right_spring_link_motor">
					<mechanicalReduction>1</mechanicalReduction>
					<hardwareInterface>PositionJointInterface</hardwareInterface>
<!--					<hardwareInterface>PositionJointInterface</hardwareInterface> -->
				</actuator>
			</transmission>
			<transmission name="${name}_left_spring_link_trans">
				<type>transmission_interface/SimpleTransmission</type>
				<joint name="${name}_left_spring_link_joint">
					<hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
<!--					<hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface> -->
				</joint>
				<actuator name="${name}_left_spring_link_motor">
					<mechanicalReduction>1</mechanicalReduction>
					<hardwareInterface>PositionJointInterface</hardwareInterface>
<!--					<hardwareInterface>PositionJointInterface</hardwareInterface> -->
				</actuator>
			</transmission>

			<gazebo>
	  	        <!--       <joint name='add_right_joint' type='revolute'>
			                <child>${name}_right_follower</child>
			                <parent>${name}_right_driver</parent>
                                        <axis>
			                   <xyz>0 0 1</xyz>
			                   <limit>
			                     <lower>-2.97</lower>
			                     <upper>2.97</upper>
                                             <effort>176</effort>
                                             <velocity>1.91986</velocity>
			                   </limit>
			                   <dynamics>
			                     <spring_reference>0</spring_reference>
			                     <spring_stiffness>0</spring_stiffness>
			                   </dynamics>
			                   <use_parent_model_frame>1</use_parent_model_frame>
		                        </axis>
		                </joint>
	  	                <joint name='add_left_joint' type='revolute'>
			                <child>${name}_left_follower</child>
			                <parent>${name}_left_driver</parent>
		                        <axis>
			                   <xyz>0 0 -1</xyz>
			                   <limit>
			                     <lower>-2.97</lower>
			                     <upper>2.97</upper>
                                             <effort>176</effort>
                                             <velocity>1.91986</velocity>
			                   </limit>
			                   <dynamics>
			                     <spring_reference>0</spring_reference>
			                     <spring_stiffness>0</spring_stiffness>
			                   </dynamics>
			                   <use_parent_model_frame>1</use_parent_model_frame>
		                        </axis>
		                </joint> -->

			<!--	<plugin name="add_right_joint_plugin" filename="libroboticsgroup_gazebo_mimic_joint_plugin.so">
					<joint>${name}_right_driver_joint</joint>
					<mimicJoint>add_right_joint</mimicJoint>
					<multiplier>-1</multiplier>
				</plugin>
				<plugin name="add_left_joint_plugin" filename="libroboticsgroup_gazebo_mimic_joint_plugin.so">
					<joint>${name}_right_driver_joint</joint>
					<mimicJoint>add_left_joint</mimicJoint>
					<multiplier>-1</multiplier>
				</plugin>

				<plugin name="${name}_right_follower_joint_plugin" filename="libroboticsgroup_gazebo_mimic_joint_plugin.so">
					<joint>${name}_right_driver_joint</joint>
					<mimicJoint>${name}_right_follower_joint</mimicJoint>
					<multiplier>-1</multiplier>
                                        <offset>0.0</offset>
				</plugin>
				<plugin name="${name}_right_spring_link_joint_plugin" filename="libroboticsgroup_gazebo_mimic_joint_plugin.so">
					<joint>${name}_right_driver_joint</joint>
					<mimicJoint>${name}_right_spring_link_joint</mimicJoint>
					<multiplier>1</multiplier>
				</plugin>
				<plugin name="${name}_left_follower_joint_plugin" filename="libroboticsgroup_gazebo_mimic_joint_plugin.so">
					<joint>${name}_right_driver_joint</joint>
					<mimicJoint>${name}_left_follower_joint</mimicJoint>
					<multiplier>-1</multiplier>
                                        <offset>0.0</offset>
				</plugin>
				<plugin name="${name}_left_spring_link_joint_plugin" filename="libroboticsgroup_gazebo_mimic_joint_plugin.so">
					<joint>${name}_right_driver_joint</joint>
					<mimicJoint>${name}_left_spring_link_joint</mimicJoint>
					<multiplier>1</multiplier>
				</plugin>
				<plugin name="${name}_left_driver_joint_plugin" filename="libroboticsgroup_gazebo_mimic_joint_plugin.so">
					<joint>${name}_right_driver_joint</joint>
					<mimicJoint>${name}_left_driver_joint</mimicJoint>
					<multiplier>1</multiplier>
				</plugin> -->

                                 <!-- add for pegasus closed plugin
				<plugin name="${name}_right_ClosedLoopPlugin" filename="libpegasus_gazebo_closed_loop_plugin.so">
					<joint>add_right_joint</joint>
                                        <child>${name}_right_follower</child>
					<parent>${name}_right_spring_link</parent>
                                        <position>0.0 0.0 0.0</position>
                                        <rotation>0.00 -0.00 0.00</rotation>
				</plugin>
				<plugin name="${name}_left_ClosedLoopPlugin" filename="libpegasus_gazebo_closed_loop_plugin.so">
					<joint>add_left_joint</joint>
                                        <child>${name}_left_follower</child>
					<parent>${name}_left_spring_link</parent>
                                        <position>0.0 0.0 0.0</position>
                                        <rotation>0.00 -0.00 0.00</rotation>
				</plugin> -->
   	                        <plugin name="gazebo_grasp_fix" filename="libgazebo_grasp_fix.so">
                                  <arm>
                                        <arm_name>gripper_arm</arm_name>
                                        <palm_link>${parent}</palm_link>
                                        <gripper_link>${name}_right_follower</gripper_link>
                                        <gripper_link>${name}_left_follower</gripper_link>
                                  </arm>
	                          <forces_angle_tolerance>100</forces_angle_tolerance>
	                          <update_rate>0.01</update_rate>
<!-- /pos_traj_controller/command = 100Hz, /gazebo/model_states & /gazebo/link_states = 1kHz, /joint_states = 50Hz -->
	                          <grip_count_threshold>0.01</grip_count_threshold>
	                          <max_grip_count>1</max_grip_count>
	                          <release_tolerance>0.005</release_tolerance>
	                          <disable_collisions_on_attach>true</disable_collisions_on_attach>
	                          <contact_topic>grasp_plugin</contact_topic>
<!---	                          <contact_topic>__default_topic__</contact_topic> -->
	                        </plugin>
			</gazebo>

		</xacro:unless>
	</xacro:macro>
</robot>
